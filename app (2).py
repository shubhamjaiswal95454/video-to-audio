# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TZOzcL6Ct4tQMHH69M3ZLB6NrjTy9ik5
"""

import streamlit as st
from PIL import Image, ImageEnhance, ImageFilter
import io

st.title("Advanced Image Converter")

# 1. Upload image
uploaded_file = st.file_uploader("Upload an image", type=["jpg", "jpeg", "png"])

if uploaded_file:
    image = Image.open(uploaded_file)
    st.image(image, caption="Original Image", use_column_width=True)

    st.subheader("Choose an operation to perform:")
    op = st.selectbox(
        "Select Image Conversion",
        ("Grayscale", "Rotate", "Resize", "Enhance Sharpness", "Blur", "Convert to PNG", "None")
    )

    new_img = image

    # 2. Apply selected operation
    if op == "Grayscale":
        new_img = image.convert("L")
    elif op == "Rotate":
        degree = st.slider("Rotate by degrees:", 0, 360, 90)
        new_img = image.rotate(degree, expand=True, resample=Image.BICUBIC)
    elif op == "Resize":
        width = st.number_input("Width:", min_value=1, value=image.width)
        height = st.number_input("Height:", min_value=1, value=image.height)
        new_img = image.resize((int(width), int(height)), Image.LANCZOS)
    elif op == "Enhance Sharpness":
        factor = st.slider("Enhancement factor:", 1.0, 5.0, 2.0)
        enhancer = ImageEnhance.Sharpness(image)
        new_img = enhancer.enhance(factor)
    elif op == "Blur":
        amount = st.slider("Blur radius:", 1, 10, 2)
        new_img = image.filter(ImageFilter.GaussianBlur(amount))
    elif op == "Convert to PNG":
        # We'll convert the image at download
        pass
    elif op == "None":
        new_img = image

    # 3. Show processed image
    st.subheader("Processed Image")
    st.image(new_img, use_column_width=True)

    # 4. Download high-quality result
    buf = io.BytesIO()
    output_format = "PNG" if op=="Convert to PNG" or uploaded_file.type=="image/png" else "JPEG"
    new_img.save(buf, format=output_format, quality=100)
    byte_im = buf.getvalue()

    st.download_button(
        label="Download Image",
        data=byte_im,
        file_name=f"converted_image.{output_format.lower()}",
        mime=f"image/{output_format.lower()}"
    )